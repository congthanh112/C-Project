// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movify;

namespace Movify.Migrations
{
    [DbContext(typeof(MovifyContext))]
    [Migration("20201108151941_sunday1")]
    partial class sunday1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Movify.Models.Customer", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("customer");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("email");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Movify.Models.Genre", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Movify.Models.Movie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("genreid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("releaseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("trailerURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("genreid");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Movify.Models.MovieShow", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("movieid")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("theaterid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("movieid");

                    b.HasIndex("theaterid");

                    b.ToTable("MovieShows");
                });

            modelBuilder.Entity("Movify.Models.Seat", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("c")
                        .HasColumnType("int");

                    b.Property<int>("r")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("theaterid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("theaterid");

                    b.ToTable("Seat");
                });

            modelBuilder.Entity("Movify.Models.Theater", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cols")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rows")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("id");

                    b.ToTable("Theater");
                });

            modelBuilder.Entity("Movify.Models.Ticket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("movieshowid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("paymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("paymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("pending");

                    b.Property<int>("seatid")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("id");

                    b.HasIndex("email");

                    b.HasIndex("movieshowid");

                    b.HasIndex("seatid");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Movify.Models.Movie", b =>
                {
                    b.HasOne("Movify.Models.Genre", "genre")
                        .WithMany()
                        .HasForeignKey("genreid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Movify.Models.MovieShow", b =>
                {
                    b.HasOne("Movify.Models.Movie", "movie")
                        .WithMany("MovieShows")
                        .HasForeignKey("movieid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movify.Models.Theater", "theater")
                        .WithMany()
                        .HasForeignKey("theaterid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Movify.Models.Seat", b =>
                {
                    b.HasOne("Movify.Models.Theater", "theater")
                        .WithMany("seats")
                        .HasForeignKey("theaterid")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Movify.Models.Ticket", b =>
                {
                    b.HasOne("Movify.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("email");

                    b.HasOne("Movify.Models.MovieShow", "MovieShow")
                        .WithMany("tickets")
                        .HasForeignKey("movieshowid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movify.Models.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("seatid")
                        .OnDelete(DeleteBehavior.NoAction);
                });
#pragma warning restore 612, 618
        }
    }
}
